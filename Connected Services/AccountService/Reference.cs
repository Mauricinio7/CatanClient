//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CatanClient.AccountService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountDto", Namespace="http://schemas.datacontract.org/2004/07/CatanService.DataTransferObject")]
    [System.SerializableAttribute()]
    public partial class AccountDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentSessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreferredLanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TokenExpirationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentSessionId {
            get {
                return this.CurrentSessionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentSessionIdField, value) != true)) {
                    this.CurrentSessionIdField = value;
                    this.RaisePropertyChanged("CurrentSessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreferredLanguage {
            get {
                return this.PreferredLanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.PreferredLanguageField, value) != true)) {
                    this.PreferredLanguageField = value;
                    this.RaisePropertyChanged("PreferredLanguage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TokenExpiration {
            get {
                return this.TokenExpirationField;
            }
            set {
                if ((this.TokenExpirationField.Equals(value) != true)) {
                    this.TokenExpirationField = value;
                    this.RaisePropertyChanged("TokenExpiration");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultDto", Namespace="http://schemas.datacontract.org/2004/07/CatanService.DataTransferObject")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CatanClient.AccountService.OperationResultProfileDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CatanClient.AccountService.OperationResultChangeRegisterEmailOrPhone))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CatanClient.AccountService.OperationResultAccountDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CatanClient.AccountService.OperationResultCreateAccountDto))]
    public partial class OperationResultDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageResponseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageResponse {
            get {
                return this.MessageResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageResponseField, value) != true)) {
                    this.MessageResponseField = value;
                    this.RaisePropertyChanged("MessageResponse");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultProfileDto", Namespace="http://schemas.datacontract.org/2004/07/CatanService.DataTransferObject")]
    [System.SerializableAttribute()]
    public partial class OperationResultProfileDto : CatanClient.AccountService.OperationResultDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CatanClient.AccountService.EnumAuthenticationStatus AunthenticationStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CatanClient.AccountService.EnumChangeAccountRegister ChangeAccountRegisterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CatanClient.AccountService.ProfileDto ProfileDtoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CatanClient.AccountService.EnumAuthenticationStatus AunthenticationStatus {
            get {
                return this.AunthenticationStatusField;
            }
            set {
                if ((this.AunthenticationStatusField.Equals(value) != true)) {
                    this.AunthenticationStatusField = value;
                    this.RaisePropertyChanged("AunthenticationStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CatanClient.AccountService.EnumChangeAccountRegister ChangeAccountRegister {
            get {
                return this.ChangeAccountRegisterField;
            }
            set {
                if ((this.ChangeAccountRegisterField.Equals(value) != true)) {
                    this.ChangeAccountRegisterField = value;
                    this.RaisePropertyChanged("ChangeAccountRegister");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CatanClient.AccountService.ProfileDto ProfileDto {
            get {
                return this.ProfileDtoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileDtoField, value) != true)) {
                    this.ProfileDtoField = value;
                    this.RaisePropertyChanged("ProfileDto");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultChangeRegisterEmailOrPhone", Namespace="http://schemas.datacontract.org/2004/07/CatanService.DataTransferObject")]
    [System.SerializableAttribute()]
    public partial class OperationResultChangeRegisterEmailOrPhone : CatanClient.AccountService.OperationResultDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CatanClient.AccountService.EnumChangeAccountRegister StatusChangeAccountRegisterField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CatanClient.AccountService.EnumChangeAccountRegister StatusChangeAccountRegister {
            get {
                return this.StatusChangeAccountRegisterField;
            }
            set {
                if ((this.StatusChangeAccountRegisterField.Equals(value) != true)) {
                    this.StatusChangeAccountRegisterField = value;
                    this.RaisePropertyChanged("StatusChangeAccountRegister");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultAccountDto", Namespace="http://schemas.datacontract.org/2004/07/CatanService.DataTransferObject")]
    [System.SerializableAttribute()]
    public partial class OperationResultAccountDto : CatanClient.AccountService.OperationResultDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CatanClient.AccountService.AccountDto AccountDtoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CatanClient.AccountService.AccountDto AccountDto {
            get {
                return this.AccountDtoField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountDtoField, value) != true)) {
                    this.AccountDtoField = value;
                    this.RaisePropertyChanged("AccountDto");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultCreateAccountDto", Namespace="http://schemas.datacontract.org/2004/07/CatanService.DataTransferObject")]
    [System.SerializableAttribute()]
    public partial class OperationResultCreateAccountDto : CatanClient.AccountService.OperationResultDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CatanClient.AccountService.ProfileDto ProfileDtoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CatanClient.AccountService.EnumCreateAccountStatus statusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CatanClient.AccountService.ProfileDto ProfileDto {
            get {
                return this.ProfileDtoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileDtoField, value) != true)) {
                    this.ProfileDtoField = value;
                    this.RaisePropertyChanged("ProfileDto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CatanClient.AccountService.EnumCreateAccountStatus status {
            get {
                return this.statusField;
            }
            set {
                if ((this.statusField.Equals(value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProfileDto", Namespace="http://schemas.datacontract.org/2004/07/CatanService.DataTransferObject")]
    [System.SerializableAttribute()]
    public partial class ProfileDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string CurrentSessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOnlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRegisteredField;
        
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PictureVersionField;
        
        private string PreferredLanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ProfilePictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isReadyToPlayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int votesReceivedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string CurrentSessionID {
            get {
                return this.CurrentSessionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentSessionIDField, value) != true)) {
                    this.CurrentSessionIDField = value;
                    this.RaisePropertyChanged("CurrentSessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOnline {
            get {
                return this.IsOnlineField;
            }
            set {
                if ((this.IsOnlineField.Equals(value) != true)) {
                    this.IsOnlineField = value;
                    this.RaisePropertyChanged("IsOnline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRegistered {
            get {
                return this.IsRegisteredField;
            }
            set {
                if ((this.IsRegisteredField.Equals(value) != true)) {
                    this.IsRegisteredField = value;
                    this.RaisePropertyChanged("IsRegistered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PictureVersion {
            get {
                return this.PictureVersionField;
            }
            set {
                if ((this.PictureVersionField.Equals(value) != true)) {
                    this.PictureVersionField = value;
                    this.RaisePropertyChanged("PictureVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string PreferredLanguage {
            get {
                return this.PreferredLanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.PreferredLanguageField, value) != true)) {
                    this.PreferredLanguageField = value;
                    this.RaisePropertyChanged("PreferredLanguage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ProfilePicture {
            get {
                return this.ProfilePictureField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfilePictureField, value) != true)) {
                    this.ProfilePictureField = value;
                    this.RaisePropertyChanged("ProfilePicture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isReadyToPlay {
            get {
                return this.isReadyToPlayField;
            }
            set {
                if ((this.isReadyToPlayField.Equals(value) != true)) {
                    this.isReadyToPlayField = value;
                    this.RaisePropertyChanged("isReadyToPlay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int votesReceived {
            get {
                return this.votesReceivedField;
            }
            set {
                if ((this.votesReceivedField.Equals(value) != true)) {
                    this.votesReceivedField = value;
                    this.RaisePropertyChanged("votesReceived");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnumCreateAccountStatus", Namespace="http://schemas.datacontract.org/2004/07/DataTransferObject.Enums")]
    public enum EnumCreateAccountStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExistsName = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExistsAccount = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorSaving = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SuccessSave = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnumAuthenticationStatus", Namespace="http://schemas.datacontract.org/2004/07/DataTransferObject.Enums")]
    public enum EnumAuthenticationStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Incorrect = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotVerified = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Verified = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InGame = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServerNotFound = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnumChangeAccountRegister", Namespace="http://schemas.datacontract.org/2004/07/DataTransferObject.Enums")]
    public enum EnumChangeAccountRegister : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invalid = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AlreadyExists = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnableToSaveData = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountService.IAccountEndPoint")]
    public interface IAccountEndPoint {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountEndPoint/CreateAccount", ReplyAction="http://tempuri.org/IAccountEndPoint/CreateAccountResponse")]
        CatanClient.AccountService.OperationResultCreateAccountDto CreateAccount(CatanClient.AccountService.AccountDto accountClientDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountEndPoint/CreateAccount", ReplyAction="http://tempuri.org/IAccountEndPoint/CreateAccountResponse")]
        System.Threading.Tasks.Task<CatanClient.AccountService.OperationResultCreateAccountDto> CreateAccountAsync(CatanClient.AccountService.AccountDto accountClientDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountEndPoint/VerifyAccount", ReplyAction="http://tempuri.org/IAccountEndPoint/VerifyAccountResponse")]
        CatanClient.AccountService.OperationResultDto VerifyAccount(CatanClient.AccountService.AccountDto accountClientDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountEndPoint/VerifyAccount", ReplyAction="http://tempuri.org/IAccountEndPoint/VerifyAccountResponse")]
        System.Threading.Tasks.Task<CatanClient.AccountService.OperationResultDto> VerifyAccountAsync(CatanClient.AccountService.AccountDto accountClientDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountEndPoint/LogIn", ReplyAction="http://tempuri.org/IAccountEndPoint/LogInResponse")]
        CatanClient.AccountService.OperationResultProfileDto LogIn(CatanClient.AccountService.AccountDto accountClientDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountEndPoint/LogIn", ReplyAction="http://tempuri.org/IAccountEndPoint/LogInResponse")]
        System.Threading.Tasks.Task<CatanClient.AccountService.OperationResultProfileDto> LogInAsync(CatanClient.AccountService.AccountDto accountClientDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountEndPoint/ResendVerificationCode", ReplyAction="http://tempuri.org/IAccountEndPoint/ResendVerificationCodeResponse")]
        bool ResendVerificationCode(string emailOrPhone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountEndPoint/ResendVerificationCode", ReplyAction="http://tempuri.org/IAccountEndPoint/ResendVerificationCodeResponse")]
        System.Threading.Tasks.Task<bool> ResendVerificationCodeAsync(string emailOrPhone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountEndPoint/ChangePassword", ReplyAction="http://tempuri.org/IAccountEndPoint/ChangePasswordResponse")]
        CatanClient.AccountService.OperationResultDto ChangePassword(CatanClient.AccountService.AccountDto accountClientDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountEndPoint/ChangePassword", ReplyAction="http://tempuri.org/IAccountEndPoint/ChangePasswordResponse")]
        System.Threading.Tasks.Task<CatanClient.AccountService.OperationResultDto> ChangePasswordAsync(CatanClient.AccountService.AccountDto accountClientDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountEndPoint/SendVerificationCodeToChangeEmailOrPhone", ReplyAction="http://tempuri.org/IAccountEndPoint/SendVerificationCodeToChangeEmailOrPhoneRespo" +
            "nse")]
        CatanClient.AccountService.OperationResultChangeRegisterEmailOrPhone SendVerificationCodeToChangeEmailOrPhone(CatanClient.AccountService.AccountDto accountClientDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountEndPoint/SendVerificationCodeToChangeEmailOrPhone", ReplyAction="http://tempuri.org/IAccountEndPoint/SendVerificationCodeToChangeEmailOrPhoneRespo" +
            "nse")]
        System.Threading.Tasks.Task<CatanClient.AccountService.OperationResultChangeRegisterEmailOrPhone> SendVerificationCodeToChangeEmailOrPhoneAsync(CatanClient.AccountService.AccountDto accountClientDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountEndPoint/ChangeEmailOrPhone", ReplyAction="http://tempuri.org/IAccountEndPoint/ChangeEmailOrPhoneResponse")]
        CatanClient.AccountService.OperationResultChangeRegisterEmailOrPhone ChangeEmailOrPhone(CatanClient.AccountService.AccountDto accountClientDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountEndPoint/ChangeEmailOrPhone", ReplyAction="http://tempuri.org/IAccountEndPoint/ChangeEmailOrPhoneResponse")]
        System.Threading.Tasks.Task<CatanClient.AccountService.OperationResultChangeRegisterEmailOrPhone> ChangeEmailOrPhoneAsync(CatanClient.AccountService.AccountDto accountClientDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountEndPoint/ConsultAccounProfileInformation", ReplyAction="http://tempuri.org/IAccountEndPoint/ConsultAccounProfileInformationResponse")]
        CatanClient.AccountService.OperationResultAccountDto ConsultAccounProfileInformation(CatanClient.AccountService.ProfileDto accountClientDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountEndPoint/ConsultAccounProfileInformation", ReplyAction="http://tempuri.org/IAccountEndPoint/ConsultAccounProfileInformationResponse")]
        System.Threading.Tasks.Task<CatanClient.AccountService.OperationResultAccountDto> ConsultAccounProfileInformationAsync(CatanClient.AccountService.ProfileDto accountClientDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountEndPoint/SendVerificationCodeToChangePassword", ReplyAction="http://tempuri.org/IAccountEndPoint/SendVerificationCodeToChangePasswordResponse")]
        CatanClient.AccountService.OperationResultDto SendVerificationCodeToChangePassword(CatanClient.AccountService.AccountDto accountClientDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountEndPoint/SendVerificationCodeToChangePassword", ReplyAction="http://tempuri.org/IAccountEndPoint/SendVerificationCodeToChangePasswordResponse")]
        System.Threading.Tasks.Task<CatanClient.AccountService.OperationResultDto> SendVerificationCodeToChangePasswordAsync(CatanClient.AccountService.AccountDto accountClientDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountEndPoint/NeedHelpProblemWithEmail", ReplyAction="http://tempuri.org/IAccountEndPoint/NeedHelpProblemWithEmailResponse")]
        bool NeedHelpProblemWithEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountEndPoint/NeedHelpProblemWithEmail", ReplyAction="http://tempuri.org/IAccountEndPoint/NeedHelpProblemWithEmailResponse")]
        System.Threading.Tasks.Task<bool> NeedHelpProblemWithEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountEndPoint/NeedHelpProblemWithPassword", ReplyAction="http://tempuri.org/IAccountEndPoint/NeedHelpProblemWithPasswordResponse")]
        bool NeedHelpProblemWithPassword(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountEndPoint/NeedHelpProblemWithPassword", ReplyAction="http://tempuri.org/IAccountEndPoint/NeedHelpProblemWithPasswordResponse")]
        System.Threading.Tasks.Task<bool> NeedHelpProblemWithPasswordAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountEndPoint/ChangeForgotPassword", ReplyAction="http://tempuri.org/IAccountEndPoint/ChangeForgotPasswordResponse")]
        bool ChangeForgotPassword(string email, string newPassword, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountEndPoint/ChangeForgotPassword", ReplyAction="http://tempuri.org/IAccountEndPoint/ChangeForgotPasswordResponse")]
        System.Threading.Tasks.Task<bool> ChangeForgotPasswordAsync(string email, string newPassword, string token);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountEndPointChannel : CatanClient.AccountService.IAccountEndPoint, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountEndPointClient : System.ServiceModel.ClientBase<CatanClient.AccountService.IAccountEndPoint>, CatanClient.AccountService.IAccountEndPoint {
        
        public AccountEndPointClient() {
        }
        
        public AccountEndPointClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountEndPointClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountEndPointClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountEndPointClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CatanClient.AccountService.OperationResultCreateAccountDto CreateAccount(CatanClient.AccountService.AccountDto accountClientDto) {
            return base.Channel.CreateAccount(accountClientDto);
        }
        
        public System.Threading.Tasks.Task<CatanClient.AccountService.OperationResultCreateAccountDto> CreateAccountAsync(CatanClient.AccountService.AccountDto accountClientDto) {
            return base.Channel.CreateAccountAsync(accountClientDto);
        }
        
        public CatanClient.AccountService.OperationResultDto VerifyAccount(CatanClient.AccountService.AccountDto accountClientDto) {
            return base.Channel.VerifyAccount(accountClientDto);
        }
        
        public System.Threading.Tasks.Task<CatanClient.AccountService.OperationResultDto> VerifyAccountAsync(CatanClient.AccountService.AccountDto accountClientDto) {
            return base.Channel.VerifyAccountAsync(accountClientDto);
        }
        
        public CatanClient.AccountService.OperationResultProfileDto LogIn(CatanClient.AccountService.AccountDto accountClientDto) {
            return base.Channel.LogIn(accountClientDto);
        }
        
        public System.Threading.Tasks.Task<CatanClient.AccountService.OperationResultProfileDto> LogInAsync(CatanClient.AccountService.AccountDto accountClientDto) {
            return base.Channel.LogInAsync(accountClientDto);
        }
        
        public bool ResendVerificationCode(string emailOrPhone) {
            return base.Channel.ResendVerificationCode(emailOrPhone);
        }
        
        public System.Threading.Tasks.Task<bool> ResendVerificationCodeAsync(string emailOrPhone) {
            return base.Channel.ResendVerificationCodeAsync(emailOrPhone);
        }
        
        public CatanClient.AccountService.OperationResultDto ChangePassword(CatanClient.AccountService.AccountDto accountClientDto) {
            return base.Channel.ChangePassword(accountClientDto);
        }
        
        public System.Threading.Tasks.Task<CatanClient.AccountService.OperationResultDto> ChangePasswordAsync(CatanClient.AccountService.AccountDto accountClientDto) {
            return base.Channel.ChangePasswordAsync(accountClientDto);
        }
        
        public CatanClient.AccountService.OperationResultChangeRegisterEmailOrPhone SendVerificationCodeToChangeEmailOrPhone(CatanClient.AccountService.AccountDto accountClientDto) {
            return base.Channel.SendVerificationCodeToChangeEmailOrPhone(accountClientDto);
        }
        
        public System.Threading.Tasks.Task<CatanClient.AccountService.OperationResultChangeRegisterEmailOrPhone> SendVerificationCodeToChangeEmailOrPhoneAsync(CatanClient.AccountService.AccountDto accountClientDto) {
            return base.Channel.SendVerificationCodeToChangeEmailOrPhoneAsync(accountClientDto);
        }
        
        public CatanClient.AccountService.OperationResultChangeRegisterEmailOrPhone ChangeEmailOrPhone(CatanClient.AccountService.AccountDto accountClientDto) {
            return base.Channel.ChangeEmailOrPhone(accountClientDto);
        }
        
        public System.Threading.Tasks.Task<CatanClient.AccountService.OperationResultChangeRegisterEmailOrPhone> ChangeEmailOrPhoneAsync(CatanClient.AccountService.AccountDto accountClientDto) {
            return base.Channel.ChangeEmailOrPhoneAsync(accountClientDto);
        }
        
        public CatanClient.AccountService.OperationResultAccountDto ConsultAccounProfileInformation(CatanClient.AccountService.ProfileDto accountClientDto) {
            return base.Channel.ConsultAccounProfileInformation(accountClientDto);
        }
        
        public System.Threading.Tasks.Task<CatanClient.AccountService.OperationResultAccountDto> ConsultAccounProfileInformationAsync(CatanClient.AccountService.ProfileDto accountClientDto) {
            return base.Channel.ConsultAccounProfileInformationAsync(accountClientDto);
        }
        
        public CatanClient.AccountService.OperationResultDto SendVerificationCodeToChangePassword(CatanClient.AccountService.AccountDto accountClientDto) {
            return base.Channel.SendVerificationCodeToChangePassword(accountClientDto);
        }
        
        public System.Threading.Tasks.Task<CatanClient.AccountService.OperationResultDto> SendVerificationCodeToChangePasswordAsync(CatanClient.AccountService.AccountDto accountClientDto) {
            return base.Channel.SendVerificationCodeToChangePasswordAsync(accountClientDto);
        }
        
        public bool NeedHelpProblemWithEmail(string email) {
            return base.Channel.NeedHelpProblemWithEmail(email);
        }
        
        public System.Threading.Tasks.Task<bool> NeedHelpProblemWithEmailAsync(string email) {
            return base.Channel.NeedHelpProblemWithEmailAsync(email);
        }
        
        public bool NeedHelpProblemWithPassword(string email) {
            return base.Channel.NeedHelpProblemWithPassword(email);
        }
        
        public System.Threading.Tasks.Task<bool> NeedHelpProblemWithPasswordAsync(string email) {
            return base.Channel.NeedHelpProblemWithPasswordAsync(email);
        }
        
        public bool ChangeForgotPassword(string email, string newPassword, string token) {
            return base.Channel.ChangeForgotPassword(email, newPassword, token);
        }
        
        public System.Threading.Tasks.Task<bool> ChangeForgotPasswordAsync(string email, string newPassword, string token) {
            return base.Channel.ChangeForgotPasswordAsync(email, newPassword, token);
        }
    }
}
